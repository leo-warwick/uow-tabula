@import (reference) "bootstrap/less/variables";
@import (reference) "bootstrap/less/mixins/grid";
@import (reference) "bootstrap/less/mixins/grid-framework";
@import (reference) "@universityofwarwick/id7/less/mixins/svg-background-with-fallback";

/* Extension to ID7 to support wider viewports than standard. Included from selected components in Tabula to reduce the amount of work needed */

@container-xl-desktop:      (1540px + @grid-gutter-width);
@container-xl:              @container-xl-desktop;
@container-2xl-desktop:     (1840px + @grid-gutter-width);
@container-2xl:             @container-2xl-desktop;

@screen-xl:                 1600px;
@screen-xl-min:             @screen-xl;
@screen-xl-desktop:         @screen-xl-min;
@screen-2xl:                1900px;
@screen-2xl-min:            @screen-2xl;
@screen-2xl-desktop:        @screen-2xl-min;

@screen-lg-max:             (@screen-xl-min - 1);
@screen-xl-max:             (@screen-2xl-min - 1);

.container(@gutter) {
  .container-fixed(@gutter);

  @media screen and (min-width: @screen-sm-min) {
    width: @container-sm;
  }
  @media screen and (min-width: @screen-md-min) {
    width: @container-md;
  }
  @media screen and (min-width: @screen-lg-min) {
    width: @container-lg;
  }
  @media screen and (min-width: @screen-xl-min) {
    width: @container-xl;
  }
  @media screen and (min-width: @screen-2xl-min) {
    width: @container-2xl;
  }
}

.container-fluid(@gutter) {
  .container-fixed(@gutter);
}

.id7-fixed-width-container {
  @media screen and (min-width: @screen-xl-min) {
    width: @container-xl;
  }
  @media screen and (min-width: @screen-2xl-min) {
    width: @container-2xl;
  }
}

@media screen and (min-width: @screen-xl-min) {
  .id7-left-border {
    .translate((-(@container-xl / 2)), 0);
  }
  .id7-right-border {
    .translate((@container-xl / 2), 0);
  }
}

@media screen and (min-width: @screen-2xl-min) {
  .id7-left-border {
    .translate((-(@container-2xl / 2)), 0);
  }
  .id7-right-border {
    .translate((@container-2xl / 2), 0);
  }
}

.id7-masthead {
  // Need a wider version of the SVGs/PNGs in the masthead
  @media (min-width: @screen-xl-min) {
    .svg-background-with-fallback("../../images/id7/masthead-logo-bleed-lg", "../../images/id7/masthead-logo-bleed-lg");
    background-size: @container-2xl 300px;

    // Generated static hashes for these resources to prevent a 302
    background-image: ~'url("../../images/id7/masthead-logo-bleed-lg.292614245737.svg")';

    html.no-svgfilters &, html.ie-or-edge &, html.safari & {
      background-image: ~'url("../../images/id7/masthead-logo-bleed-lg.275646008918.png")';
    }

    html.safari & {
      @media (-webkit-min-device-pixel-ratio: 2) {
        background-image: ~'url("../../images/id7/masthead-logo-bleed-lg@2x.283094224967.png")';
      }

      @media (-webkit-min-device-pixel-ratio: 3) {
        background-image: ~'url("../../images/id7/masthead-logo-bleed-lg@3x.930117052675.png")';
      }
    }
  }

  .id7-header-text h1.affix {
    @media (min-width: @screen-xl-min) {
      width: @container-xl;
    }
    @media (min-width: @screen-2xl-min) {
      width: @container-2xl;
    }
  }
}

.id7-navigation.affix {
  @media (min-width: @screen-xl-min) {
    width: @container-xl;
  }
  @media (min-width: @screen-2xl-min) {
    width: @container-2xl;
  }
}

.id7-main-content-area {
  > header, > .id7-main-content {
    .container((@grid-gutter-width * 2));
  }
}

.id7-paging {
  .container((@grid-gutter-width * 2));
}

// col-xl and col-2xl
.make-xl-column(@columns; @gutter: @grid-gutter-width) {
  position: relative;
  min-height: 1px;
  padding-right: (@gutter / 2);
  padding-left: (@gutter / 2);

  @media (min-width: @screen-xl-min) {
    float: left;
    width: percentage((@columns / @grid-columns));
  }
}
.make-xl-column-offset(@columns) {
  @media (min-width: @screen-xl-min) {
    margin-left: percentage((@columns / @grid-columns));
  }
}
.make-xl-column-push(@columns) {
  @media (min-width: @screen-xl-min) {
    left: percentage((@columns / @grid-columns));
  }
}
.make-xl-column-pull(@columns) {
  @media (min-width: @screen-xl-min) {
    right: percentage((@columns / @grid-columns));
  }
}

.make-2xl-column(@columns; @gutter: @grid-gutter-width) {
  position: relative;
  min-height: 1px;
  padding-right: (@gutter / 2);
  padding-left: (@gutter / 2);

  @media (min-width: @screen-2xl-min) {
    float: left;
    width: percentage((@columns / @grid-columns));
  }
}
.make-2xl-column-offset(@columns) {
  @media (min-width: @screen-2xl-min) {
    margin-left: percentage((@columns / @grid-columns));
  }
}
.make-2xl-column-push(@columns) {
  @media (min-width: @screen-2xl-min) {
    left: percentage((@columns / @grid-columns));
  }
}
.make-2xl-column-pull(@columns) {
  @media (min-width: @screen-2xl-min) {
    right: percentage((@columns / @grid-columns));
  }
}

// Extra wide grid column styles for xl and 2xl
.make-wide-grid-columns() {
  // Common styles for all sizes of grid columns, widths 1-12
  .col(@index) { // initial
    @item: ~".col-xl-@{index}, .col-2xl-@{index}";
    .col((@index + 1), @item);
  }
  .col(@index, @list) when (@index =< @grid-columns) { // general; "=<" isn't a typo
    @item: ~".col-xl-@{index}, .col-2xl-@{index}";
    .col((@index + 1), ~"@{list}, @{item}");
  }
  .col(@index, @list) when (@index > @grid-columns) { // terminal
    @{list} {
      position: relative;
      // Prevent columns from collapsing when empty
      min-height: 1px;
      // Inner gutter via padding
      padding-right: floor((@grid-gutter-width / 2));
      padding-left: ceil((@grid-gutter-width / 2));
    }
  }
  .col(1); // kickstart it
}

.make-wide-grid-columns();
@media (min-width: @screen-xl-min) {
  .make-grid(xl);
}
@media (min-width: @screen-2xl-min) {
  .make-grid(2xl);
}
